
Diagnostics:
error: cannot drop local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/assign_local_field_invalid.move:13:9
   │
12 │         let f = &s.f;
   │                 ---- field `f` via local `s` previously borrowed here
13 │         s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^ dropped here
14 │         *f;
   │         -- conflicting reference `f` used here

error: cannot drop local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/assign_local_field_invalid.move:19:9
   │
18 │         let f = &mut s.f;
   │                 -------- field `f` via local `s` previously mutably borrowed here
19 │         s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^ dropped here
20 │         *f;
   │         -- conflicting reference `f` used here

error: cannot drop local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/assign_local_field_invalid.move:25:9
   │
24 │         let f = id(&s.f);
   │                 -------- field `f` via local `s` previously borrowed here
25 │         s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^ dropped here
26 │         *f;
   │         -- conflicting reference `f` used here

error: cannot drop local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/assign_local_field_invalid.move:31:9
   │
30 │         let f = id_mut(&mut s.f);
   │                 ---------------- field `f` via local `s` previously mutably borrowed here
31 │         s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^ dropped here
32 │         *f;
   │         -- conflicting reference `f` used here
