
Diagnostics:
error: cannot drop local `x` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/assign_local_full_invalid.move:13:9
   │
12 │         let f = &x;
   │                 -- local `x` previously borrowed here
13 │         x = 0;
   │         ^^^^^ dropped here
14 │         *f;
   │         -- conflicting reference `f` used here

error: cannot drop local `x` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/assign_local_full_invalid.move:19:9
   │
18 │         let f = &mut x;
   │                 ------ local `x` previously mutably borrowed here
19 │         x = 0;
   │         ^^^^^ dropped here
20 │         *f;
   │         -- conflicting reference `f` used here

error: cannot drop local `x` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/assign_local_full_invalid.move:25:9
   │
24 │         let f = id(&x);
   │                 ------ local `x` previously borrowed here
25 │         x = 0;
   │         ^^^^^ dropped here
26 │         *f;
   │         -- conflicting reference `f` used here

error: cannot drop local `x` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/assign_local_full_invalid.move:31:9
   │
30 │         let f = id_mut(&mut x);
   │                 -------------- local `x` previously mutably borrowed here
31 │         x = 0;
   │         ^^^^^ dropped here
32 │         *f;
   │         -- conflicting reference `f` used here
