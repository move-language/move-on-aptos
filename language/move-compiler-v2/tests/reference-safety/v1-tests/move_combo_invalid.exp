
Diagnostics:
error: cannot move local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/move_combo_invalid.move:14:9
   │
13 │         if (cond) f = &s.f else f = &s.g;
   │                       ----          ---- field `g` via local `s` previously borrowed here
   │                       │
   │                       field `f` via local `s` previously borrowed here
14 │         move s;
   │         ^^^^^^ move attempted here
15 │         *f;
   │         -- conflicting reference `f` used here

error: cannot move local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/move_combo_invalid.move:22:9
   │
21 │         if (cond) f = &mut s.f else f = &mut other.f;
   │                       -------- field `f` via local `s` previously mutably borrowed here
22 │         move s;
   │         ^^^^^^ move attempted here
23 │         *f;
   │         -- conflicting reference `f` used here

error: cannot move local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/move_combo_invalid.move:30:9
   │
29 │         if (cond) f = &mut s else f = other;
   │                       ------ local `s` previously mutably borrowed here
30 │         move s;
   │         ^^^^^^ move attempted here
31 │         *f;
   │         -- conflicting reference `f` used here

error: cannot move local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/move_combo_invalid.move:38:9
   │
37 │         if (cond) f = id_mut(&mut s) else f = other;
   │                       -------------- local `s` previously mutably borrowed here
38 │         move s;
   │         ^^^^^^ move attempted here
39 │         *f;
   │         -- conflicting reference `f` used here

error: cannot move local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/move_combo_invalid.move:45:21
   │
44 │         let f = &s.f;
   │                 ---- field `f` via local `s` previously borrowed here
45 │         if (cond) { move s; };
   │                     ^^^^^^ move attempted here
46 │         *f;
   │         -- conflicting reference `f` used here
