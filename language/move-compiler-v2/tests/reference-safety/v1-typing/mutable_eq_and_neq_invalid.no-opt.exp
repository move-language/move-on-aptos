
Diagnostics:
error: cannot freeze value which is still mutably borrowed
  ┌─ tests/reference-safety/v1-typing/mutable_eq_and_neq_invalid.move:7:20
  │
6 │         let f = &mut p.b1.f;
  │                 ----------- field `f` previously mutably borrowed here
7 │         let comp = (&mut p.b1) == (&mut p.b2);
  │                    ^^^^^^^^^^^ implicitly frozen here
8 │         *f = comp
  │         --------- conflicting reference `f` used here

error: cannot freeze value which is still mutably borrowed
   ┌─ tests/reference-safety/v1-typing/mutable_eq_and_neq_invalid.move:13:20
   │
12 │         let f = &mut p.b1.f;
   │                 ----------- field `f` previously mutably borrowed here
13 │         let comp = (&mut p.b1) != (&mut p.b2);
   │                    ^^^^^^^^^^^ implicitly frozen here
14 │         *f = comp
   │         --------- conflicting reference `f` used here
