============ initial bytecode ================

[variant baseline]
fun m::main() {
     var $t0: u64
     var $t1: bool
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
  0: $t0 := 0
  1: label L0
  2: $t1 := true
  3: if ($t1) goto 4 else goto 10
  4: label L2
  5: $t3 := 1
  6: $t2 := +($t0, $t3)
  7: $t0 := infer($t2)
  8: goto 14
  9: goto 12
 10: label L3
 11: goto 14
 12: label L4
 13: goto 1
 14: label L1
 15: $t5 := 1
 16: $t4 := ==($t0, $t5)
 17: if ($t4) goto 18 else goto 20
 18: label L5
 19: goto 23
 20: label L6
 21: $t6 := 42
 22: abort($t6)
 23: label L7
 24: return ()
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::main() {
     var $t0: u64
     var $t1: bool
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
  0: $t0 := 0
  1: $t1 := true
  2: if ($t1) goto 3 else goto 7
  3: label L2
  4: $t3 := 1
  5: $t2 := +($t0, $t3)
  6: $t0 := move($t2)
  7: label L1
  8: $t5 := 1
  9: $t4 := ==($t0, $t5)
 10: if ($t4) goto 11 else goto 13
 11: label L5
 12: return ()
 13: label L6
 14: $t6 := 42
 15: abort($t6)
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
fun m::main() {
     var $t0: u64
     var $t1: bool
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
     # live vars:
     # events: b:$t0
  0: $t0 := 0
     # live vars: $t0
     # events: b:$t1
  1: $t1 := true
     # live vars: $t0, $t1
     # events: e:$t1
  2: if ($t1) goto 3 else goto 7
     # live vars: $t0
  3: label L2
     # live vars: $t0
     # events: b:$t3
  4: $t3 := 1
     # live vars: $t0, $t3
     # events: e:$t3, b:$t2
  5: $t2 := +($t0, $t3)
     # live vars: $t2
     # events: e:$t2
  6: $t0 := move($t2)
     # live vars: $t0
  7: label L1
     # live vars: $t0
     # events: b:$t5
  8: $t5 := 1
     # live vars: $t0, $t5
     # events: e:$t0, e:$t5, b:$t4
  9: $t4 := ==($t0, $t5)
     # live vars: $t4
     # events: e:$t4
 10: if ($t4) goto 11 else goto 13
     # live vars:
 11: label L5
     # live vars:
 12: return ()
     # live vars:
 13: label L6
     # live vars:
     # events: b:$t6
 14: $t6 := 42
     # live vars: $t6
     # events: e:$t6
 15: abort($t6)
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
fun m::main() {
     var $t0: u64
     var $t1: bool
     var $t2: u64 [unused]
     var $t3: u64
     var $t4: bool [unused]
     var $t5: u64 [unused]
     var $t6: u64 [unused]
  0: $t0 := 0
  1: $t1 := true
  2: if ($t1) goto 3 else goto 7
  3: label L2
  4: $t3 := 1
  5: $t3 := +($t0, $t3)
  6: $t0 := move($t3)
  7: label L1
  8: $t3 := 1
  9: $t1 := ==($t0, $t3)
 10: if ($t1) goto 11 else goto 13
 11: label L5
 12: return ()
 13: label L6
 14: $t0 := 42
 15: abort($t0)
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::main() {
     var $t0: u64
     var $t1: bool
     var $t2: u64 [unused]
     var $t3: u64
     var $t4: bool [unused]
     var $t5: u64 [unused]
     var $t6: u64 [unused]
  0: $t0 := 0
  1: $t1 := true
  2: if ($t1) goto 3 else goto 7
  3: label L2
  4: $t3 := 1
  5: $t3 := +($t0, $t3)
  6: $t0 := move($t3)
  7: label L1
  8: $t3 := 1
  9: $t1 := ==($t0, $t3)
 10: if ($t1) goto 11 else goto 13
 11: label L5
 12: return ()
 13: label L6
 14: $t0 := 42
 15: abort($t0)
}


============ disassembled file-format ==================
// Move bytecode v7
module 32.m {


main() /* def_idx: 0 */ {
L0:	loc0: u64
L1:	loc1: u64
B0:
	0: LdU64(0)
	1: LdU64(1)
	2: Add
	3: LdU64(1)
	4: Eq
	5: BrFalse(7)
B1:
	6: Ret
B2:
	7: LdU64(42)
	8: Abort
}
}
============ bytecode verification succeeded ========
