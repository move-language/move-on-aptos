
Diagnostics:
error: variant `Rgb` not declared in `m::Color`
   ┌─ tests/checking/variants/variants_check_err.move:21:13
   │
21 │             Color::Rgb{red, green, blue} => false,
   │             ^^^^^^^^^^

error: variants not allowed in this context
   ┌─ tests/checking/variants/variants_check_err.move:27:34
   │
27 │     fun missplaced_variant(self: Color::Red): bool {
   │                                  ^^^^^^^^^^

error: variants not allowed in this context
   ┌─ tests/checking/variants/variants_check_err.move:28:9
   │
28 │         0x815::m::missplaced_variant::Red();
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: variants not allowed in this context
   ┌─ tests/checking/variants/variants_check_err.move:32:29
   │
32 │     fun missing_field(self: Color::Red): bool {
   │                             ^^^^^^^^^^

error: missing field `blue`
   ┌─ tests/checking/variants/variants_check_err.move:34:13
   │
34 │             Color::RGB{red, green} => false,
   │             ^^^^^^^^^^^^^^^^^^^^^^

error: field `black` not declared in `m::Color`
   ┌─ tests/checking/variants/variants_check_err.move:40:42
   │
40 │             Color::RGB{red, green, blue, black} => false,
   │                                          ^^^^^

error: cannot select field `f1` since it has different types in variants of enum `Fields`
   ┌─ tests/checking/variants/variants_check_err.move:49:9
   │
49 │         self.f1 + (self.f2 as u64)
   │         ^^^^
   │
   = field `f1` has type `u8` in variant `V3` and type `u64` in variant `V1` and type `u64` in variant `V2`
