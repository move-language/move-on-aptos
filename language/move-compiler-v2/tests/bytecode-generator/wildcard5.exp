// -- Model dump before bytecode pipeline
module 0xc0ffee::m {
    struct S {
        x: u64,
        y: u64,
    }
    public fun test() {
        {
          let s: S = pack m::S(3, 4);
          {
            let m::S{ x: _, y: _ } = s;
            Tuple()
          }
        }
    }
} // end 0xc0ffee::m

// -- Sourcified model before bytecode pipeline
module 0xc0ffee::m {
    struct S {
        x: u64,
        y: u64,
    }
    public fun test() {
        let s = S{x: 3,y: 4};
        let S{x: _,y: _} = s;
    }
}

============ initial bytecode ================

[variant baseline]
public fun m::test() {
     var $t0: 0xc0ffee::m::S
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
  0: $t1 := 3
  1: $t2 := 4
  2: $t0 := pack 0xc0ffee::m::S($t1, $t2)
  3: ($t3, $t4) := unpack 0xc0ffee::m::S($t0)
  4: return ()
}


============ bytecode verification succeeded ========
