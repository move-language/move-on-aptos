// -- Model dump before bytecode pipeline
module 0x42::mathtest2 {
    public inline fun fun2(a: u64,b: u64,c: u64): u64 {
        Cast<u64>(Add<u128>(Add<u128>(Mul<u128>(7, Cast<u128>(a)), Mul<u128>(11, Cast<u128>(b))), Mul<u128>(13, Cast<u128>(c))))
    }
} // end 0x42::mathtest2
module 0x42::mathtest {
    public inline fun fun1(a: u64,b: u64,c: u64): u64 {
        Cast<u64>(Add<u128>(Add<u128>(Mul<u128>(2, Cast<u128>(a)), Mul<u128>(3, Cast<u128>(b))), Mul<u128>(5, Cast<u128>(c))))
    }
} // end 0x42::mathtest
module 0x42::test {
    use 0x42::mathtest; // resolved as: 0x42::mathtest
    use 0x42::mathtest2; // resolved as: 0x42::mathtest2
    private fun test_nested_fun1() {
        if true {
          Tuple()
        } else {
          Abort(0)
        };
        Tuple()
    }
} // end 0x42::test


============ bytecode verification succeeded ========
